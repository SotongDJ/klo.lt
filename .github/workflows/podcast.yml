# Simple workflow for deploying static content to GitHub Pages
name: Update podcast content to Pages

on:
  # Runs on pushes targeting the default branch
  # push:
  #   branches: ["main"]

  schedule:
    - cron: "5 * * * *"
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  Initial:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Pull records
        run: |
          rsync -Pru /mnt/sd3/record/klo.lt/docs ./
          rsync -Pru /mnt/sd3/record/klo.lt/record/blg/record ./record/blg/
          rsync -Pru /mnt/sd3/record/klo.lt/record/exr/record ./record/exr/
          rsync -Pru /mnt/sd3/record/klo.lt/record/jst/record ./record/jst/
          rsync -Pru /mnt/sd3/record/klo.lt/record/sst/record ./record/sst/
      - name: record
        run: |
          rsync -Pru ./static_files/* ./docs/
      - name: check py requirements
        run: |
          pip3 install -r requirements.txt
      - name: Update rss - prepare Spotify
        env:
          SPT_ID: ${{ secrets.spotify_client_id }}
          SPT_SC: ${{ secrets.spotify_client_secret }}
        run: |
          python3 secret.py --spotify_id "$SPT_ID" --spotify_secret "$SPT_SC"
  Update:
    needs: Initial
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: self-hosted
    steps:
      - name: Update rss - update BLG
        run: |
          python3 update.py blg
          sleep 10
      - name: Update rss - update EXR
        run: |
          python3 update.py exr
          sleep 8
      - name: Update rss - update JST
        run: |
          python3 update.py jst
          sleep 9
      - name: Update rss - update SST
        run: |
          python3 update.py sst
          sleep 7
      - name: Merge feed source
        run: |
          python3 merge.py blg
          python3 merge.py exr
          python3 merge.py jst
          python3 merge.py sst
      - name: Annotate feed with various info
        run: |
          python3 annotate.py blg > record/blg/filter.txt
          python3 annotate.py exr > record/exr/filter.txt
          python3 annotate.py jst > record/jst/filter.txt
          python3 annotate.py sst > record/sst/filter.txt
      - name: Export feed into js file
        run: |
          python3 export.py blg
          python3 export.py exr
          python3 export.py jst
          python3 export.py sst
  Deploy:
    needs: Update
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: self-hosted
    steps:
      - name: Setup git config
        env:
          EMAIL: ${{ secrets.email }}
          KEY: ${{ secrets.key }}
        run: |
          git config user.name "RSS Update Bot"
          git config user.email "$EMAIL"
          git config user.signingkey "$KEY"
      - name: Check git status
        id: check_git_status
        run: |
          echo "git_status="`git status --porcelain`
          echo "git_status="`git status --porcelain` >> $GITHUB_OUTPUT
      - name: Commit updates
        if: ${{ steps.check_git_status.outputs.git_status != '' }}
        run: |
          echo git_status: ${{ steps.check_git_status.outputs.git_status }}
          git add -A
          git commit -S -m "update rss feed "`TZ='<UTC+8>-8' date +'%b_%d,_%Y_%H:%M:%S'`" [bot action]"
          git push https://${{ secrets.PAT }}@github.com/SotongDJ/klo.lt.git
      - name: Echo status
        run: |
          echo ${{ needs.build.outputs.git_status }}
      - name: Save changes
        run: |
          rsync -Pru ./docs /mnt/sd3/record/klo.lt/
          rsync -Pru ./record/blg/record /mnt/sd3/record/klo.lt/record/blg/
          rsync -Pru ./record/exr/record /mnt/sd3/record/klo.lt/record/exr/
          rsync -Pru ./record/jst/record /mnt/sd3/record/klo.lt/record/jst/
          rsync -Pru ./record/sst/record /mnt/sd3/record/klo.lt/record/sst/
      - name: Backup changes
        run: |
          if [ ! -f `TZ='<UTC+8>-8' date +'/mnt/sd3/record/klolt-%b_%Y.7z'` ]; then
              echo "Creating baseline archive: "`TZ='<UTC+8>-8' date +'/mnt/sd3/record/klolt_%b-%Y.7z'`
              7z a `TZ='<UTC+8>-8' date +'/mnt/sd3/record/klolt-%b_%Y.7z'` /mnt/sd3/record/klo.lt
          fi
          7z d `TZ='<UTC+8>-8' date +'/mnt/sd3/record/klolt-%b_%Y.7z'` /mnt/sd3/record/klo.lt -o`TZ='<UTC+8>-8' date +'/mnt/sd3/record/klolt-%b_%Y-%H%M.7z'`
      - name: Setup Pages
        if: ${{ steps.check_git_status.outputs.git_status != '' }}
        uses: actions/configure-pages@v5
      - name: Upload artifact
        if: ${{ steps.check_git_status.outputs.git_status != '' }}
        uses: actions/upload-pages-artifact@v3
        with:
          path: './docs/'
      - name: Deploy to GitHub Pages
        if: ${{ steps.check_git_status.outputs.git_status != '' }}
        id: deployment
        uses: actions/deploy-pages@v4
